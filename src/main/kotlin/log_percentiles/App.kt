/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package log_percentiles

import java.io.File

const val READ_API_REGEX = """([^\s]+)\s+([^\s]+)\s+\"GET\s+([^\s]+)\"\s+([^\s]+)\s+([^\s]+)"""
const val MAX_RESPONSE_TIME = 24 * 60 * 60 * 1000

fun getResponseTime(log: String, respTimes: ArrayList<Int>, regex: Regex = READ_API_REGEX.toRegex()) {
    
    val match = regex.matchEntire(log)
    if (match == null) {
        return 
    }
    
    try {
        respTimes.add(match.destructured.component5().toInt())
    }
    catch(e: Exception) {
        println("invalid log: ${log}, ${e.toString()}")
    }
}

fun calcPercentiles(dir: String) {

    val regex = READ_API_REGEX.toRegex()
    val f = File(dir)
    val ftw = f.walk()
    val respTimes = ArrayList<Int>()
    for(file in ftw.iterator()) {
        if(file.isDirectory || !file.name.endsWith(".log")) {
            continue
        }
        for(log in file.readLines()) {
            getResponseTime(log, respTimes, regex)
        }
    }
    
    respTimes.sort()
    // println("${respTimes.size}")
    val ms90 = respTimes[(respTimes.size * 0.9).toInt()]
    val ms95 = respTimes[(respTimes.size * 0.95).toInt()]
    val ms99 = respTimes[(respTimes.size * 0.99).toInt()]
    println("90% of requests return a response in ${ms90} ms")
    println("95% of requests return a response in ${ms95} ms")
    println("99% of requests return a response in ${ms99} ms")
}

fun main(args: Array<String>) {
    val dir = "/var/log/httpd" 
    calcPercentiles(dir)
}
